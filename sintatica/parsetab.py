# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "rightASSIGNleftORleftANDnonassocEQNEQLTGTLEGEleftPLUSMINUSleftTIMESDIVIDErightNOTAND ASSIGN BOOL CHAR COMMA DIVIDE ELSE END EQ FALSE FLOAT FOR FUNCTION GE GT ID IF IN INTEGER LE LPAREN LT MINUS NEQ NOT OR PLUS RANGE RETURN RPAREN STRING TIMES TRUE WHILEprogram : statement_liststatement_list : statement_list statement\n| statementstatement : expression\n| if_statement\n| while_statement\n| for_statement\n| function_def\n| return_statementblock : statement_list END\n| statementif_statement : IF expression block\n| IF expression block ELSE blockwhile_statement : WHILE expression blockfor_statement : FOR ID IN range_statement blockrange_statement : expression RANGE expressionfunction_def : FUNCTION ID LPAREN param_list RPAREN block\n| FUNCTION ID LPAREN param_list RPAREN statement_list ENDreturn_statement : RETURN expressionparam_list : non_empty_param_list\n| emptynon_empty_param_list : non_empty_param_list COMMA ID\n| IDarg_list : non_empty_arg_list\n| emptynon_empty_arg_list : non_empty_arg_list COMMA expression\n| expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression AND expression\n| expression OR expression\n| expression EQ expression\n| expression NEQ expression\n| expression LT expression\n| expression GT expression\n| expression LE expression\n| expression GE expressionexpression : NOT expressionexpression : LPAREN expression RPARENexpression : ID ASSIGN expressionexpression : ID LPAREN arg_list RPARENexpression : INTEGER\n| FLOAT\n| STRING\n| CHAR\n| BOOL\n| TRUE\n| FALSEexpression : IDempty :"

_lr_action_items = {
    "NOT": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            10,
            10,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            10,
            10,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            10,
            10,
            10,
            -2,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            -40,
            10,
            10,
            10,
            10,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            10,
            -3,
            -14,
            10,
            -43,
            10,
            10,
            -10,
            10,
            -13,
            -15,
            10,
            10,
            -16,
            -17,
            10,
            -10,
        ],
    ),
    "LPAREN": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            11,
            11,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            11,
            11,
            41,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            11,
            11,
            11,
            -2,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            -40,
            11,
            11,
            11,
            11,
            70,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            11,
            -3,
            -14,
            11,
            -43,
            11,
            11,
            -10,
            11,
            -13,
            -15,
            11,
            11,
            -16,
            -17,
            11,
            -10,
        ],
    ),
    "ID": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            91,
        ],
        [
            12,
            12,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            12,
            12,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            12,
            12,
            44,
            45,
            12,
            -2,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            12,
            -40,
            12,
            12,
            12,
            12,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            12,
            -3,
            -14,
            12,
            77,
            -43,
            12,
            12,
            -10,
            12,
            -13,
            -15,
            12,
            12,
            90,
            -16,
            -17,
            12,
            -10,
        ],
    ),
    "INTEGER": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            13,
            13,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            13,
            13,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            13,
            13,
            13,
            -2,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            13,
            -40,
            13,
            13,
            13,
            13,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            13,
            -3,
            -14,
            13,
            -43,
            13,
            13,
            -10,
            13,
            -13,
            -15,
            13,
            13,
            -16,
            -17,
            13,
            -10,
        ],
    ),
    "FLOAT": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            14,
            14,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            14,
            14,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            14,
            14,
            14,
            -2,
            14,
            14,
            14,
            14,
            14,
            14,
            14,
            14,
            14,
            14,
            14,
            14,
            -40,
            14,
            14,
            14,
            14,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            14,
            -3,
            -14,
            14,
            -43,
            14,
            14,
            -10,
            14,
            -13,
            -15,
            14,
            14,
            -16,
            -17,
            14,
            -10,
        ],
    ),
    "STRING": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            15,
            15,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            15,
            15,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            15,
            15,
            15,
            -2,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            -40,
            15,
            15,
            15,
            15,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            15,
            -3,
            -14,
            15,
            -43,
            15,
            15,
            -10,
            15,
            -13,
            -15,
            15,
            15,
            -16,
            -17,
            15,
            -10,
        ],
    ),
    "CHAR": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            16,
            16,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            16,
            16,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            16,
            16,
            16,
            -2,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            -40,
            16,
            16,
            16,
            16,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            16,
            -3,
            -14,
            16,
            -43,
            16,
            16,
            -10,
            16,
            -13,
            -15,
            16,
            16,
            -16,
            -17,
            16,
            -10,
        ],
    ),
    "BOOL": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            17,
            17,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            17,
            17,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            17,
            17,
            17,
            -2,
            17,
            17,
            17,
            17,
            17,
            17,
            17,
            17,
            17,
            17,
            17,
            17,
            -40,
            17,
            17,
            17,
            17,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            17,
            -3,
            -14,
            17,
            -43,
            17,
            17,
            -10,
            17,
            -13,
            -15,
            17,
            17,
            -16,
            -17,
            17,
            -10,
        ],
    ),
    "TRUE": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            18,
            18,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            18,
            18,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            18,
            18,
            18,
            -2,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            -40,
            18,
            18,
            18,
            18,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            18,
            -3,
            -14,
            18,
            -43,
            18,
            18,
            -10,
            18,
            -13,
            -15,
            18,
            18,
            -16,
            -17,
            18,
            -10,
        ],
    ),
    "FALSE": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            69,
            71,
            72,
            73,
            74,
            75,
            82,
            83,
            84,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            19,
            19,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            19,
            19,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            19,
            19,
            19,
            -2,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            -40,
            19,
            19,
            19,
            19,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            19,
            -3,
            -14,
            19,
            -43,
            19,
            19,
            -10,
            19,
            -13,
            -15,
            19,
            19,
            -16,
            -17,
            19,
            -10,
        ],
    ),
    "IF": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            71,
            73,
            74,
            75,
            82,
            83,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            20,
            20,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            20,
            20,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            20,
            -3,
            -14,
            -43,
            20,
            -10,
            20,
            -13,
            -15,
            20,
            -16,
            -17,
            20,
            -10,
        ],
    ),
    "WHILE": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            71,
            73,
            74,
            75,
            82,
            83,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            21,
            21,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            21,
            21,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            21,
            -3,
            -14,
            -43,
            21,
            -10,
            21,
            -13,
            -15,
            21,
            -16,
            -17,
            21,
            -10,
        ],
    ),
    "FOR": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            71,
            73,
            74,
            75,
            82,
            83,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            22,
            22,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            22,
            22,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            22,
            -3,
            -14,
            -43,
            22,
            -10,
            22,
            -13,
            -15,
            22,
            -16,
            -17,
            22,
            -10,
        ],
    ),
    "FUNCTION": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            71,
            73,
            74,
            75,
            82,
            83,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            23,
            23,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            23,
            23,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            23,
            -3,
            -14,
            -43,
            23,
            -10,
            23,
            -13,
            -15,
            23,
            -16,
            -17,
            23,
            -10,
        ],
    ),
    "RETURN": (
        [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            71,
            73,
            74,
            75,
            82,
            83,
            85,
            87,
            88,
            89,
            91,
        ],
        [
            24,
            24,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            24,
            24,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            24,
            -3,
            -14,
            -43,
            24,
            -10,
            24,
            -13,
            -15,
            24,
            -16,
            -17,
            24,
            -10,
        ],
    ),
    "$end": (
        [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            67,
            68,
            71,
            74,
            82,
            83,
            88,
            91,
        ],
        [
            0,
            -1,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            -11,
            -14,
            -43,
            -10,
            -13,
            -15,
            -17,
            -10,
        ],
    ),
    "ELSE": (
        [
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            67,
            68,
            71,
            74,
            82,
            83,
            88,
            91,
        ],
        [
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            73,
            -11,
            -14,
            -43,
            -10,
            -13,
            -15,
            -17,
            -10,
        ],
    ),
    "END": (
        [
            4,
            5,
            6,
            7,
            8,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            25,
            38,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            65,
            66,
            67,
            68,
            71,
            74,
            82,
            83,
            88,
            89,
            91,
        ],
        [
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -2,
            -40,
            -19,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -12,
            74,
            -3,
            -14,
            -43,
            -10,
            -13,
            -15,
            -17,
            91,
            -10,
        ],
    ),
    "PLUS": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            26,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            26,
            26,
            26,
            26,
            -28,
            -29,
            -30,
            -31,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            -41,
            26,
            26,
            -43,
            26,
            26,
            26,
        ],
    ),
    "MINUS": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            27,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            27,
            27,
            27,
            27,
            -28,
            -29,
            -30,
            -31,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            -41,
            27,
            27,
            -43,
            27,
            27,
            27,
        ],
    ),
    "TIMES": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            28,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            28,
            28,
            28,
            28,
            28,
            28,
            -30,
            -31,
            28,
            28,
            28,
            28,
            28,
            28,
            28,
            28,
            -41,
            28,
            28,
            -43,
            28,
            28,
            28,
        ],
    ),
    "DIVIDE": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            29,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            29,
            29,
            29,
            29,
            29,
            29,
            -30,
            -31,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            -41,
            29,
            29,
            -43,
            29,
            29,
            29,
        ],
    ),
    "AND": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            30,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            30,
            30,
            30,
            30,
            -28,
            -29,
            -30,
            -31,
            -32,
            30,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            30,
            30,
            -43,
            30,
            30,
            30,
        ],
    ),
    "OR": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            31,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            31,
            31,
            31,
            31,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            31,
            31,
            -43,
            31,
            31,
            31,
        ],
    ),
    "EQ": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            32,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            32,
            32,
            32,
            32,
            -28,
            -29,
            -30,
            -31,
            32,
            32,
            None,
            None,
            None,
            None,
            None,
            None,
            -41,
            32,
            32,
            -43,
            32,
            32,
            32,
        ],
    ),
    "NEQ": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            33,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            33,
            33,
            33,
            33,
            -28,
            -29,
            -30,
            -31,
            33,
            33,
            None,
            None,
            None,
            None,
            None,
            None,
            -41,
            33,
            33,
            -43,
            33,
            33,
            33,
        ],
    ),
    "LT": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            34,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            34,
            34,
            34,
            34,
            -28,
            -29,
            -30,
            -31,
            34,
            34,
            None,
            None,
            None,
            None,
            None,
            None,
            -41,
            34,
            34,
            -43,
            34,
            34,
            34,
        ],
    ),
    "GT": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            35,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            35,
            35,
            35,
            35,
            -28,
            -29,
            -30,
            -31,
            35,
            35,
            None,
            None,
            None,
            None,
            None,
            None,
            -41,
            35,
            35,
            -43,
            35,
            35,
            35,
        ],
    ),
    "LE": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            36,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            36,
            36,
            36,
            36,
            -28,
            -29,
            -30,
            -31,
            36,
            36,
            None,
            None,
            None,
            None,
            None,
            None,
            -41,
            36,
            36,
            -43,
            36,
            36,
            36,
        ],
    ),
    "GE": (
        [
            4,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            64,
            71,
            76,
            81,
            87,
        ],
        [
            37,
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            37,
            37,
            37,
            37,
            -28,
            -29,
            -30,
            -31,
            37,
            37,
            None,
            None,
            None,
            None,
            None,
            None,
            -41,
            37,
            37,
            -43,
            37,
            37,
            37,
        ],
    ),
    "ASSIGN": (
        [
            12,
        ],
        [
            40,
        ],
    ),
    "RPAREN": (
        [
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            39,
            41,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            70,
            71,
            77,
            78,
            79,
            80,
            81,
            90,
        ],
        [
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            59,
            -52,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            71,
            -24,
            -25,
            -27,
            -52,
            -43,
            -23,
            85,
            -20,
            -21,
            -26,
            -22,
        ],
    ),
    "COMMA": (
        [
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            62,
            64,
            71,
            77,
            79,
            81,
            90,
        ],
        [
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            72,
            -27,
            -43,
            -23,
            86,
            -26,
            -22,
        ],
    ),
    "RANGE": (
        [
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            38,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            71,
            76,
        ],
        [
            -51,
            -44,
            -45,
            -46,
            -47,
            -48,
            -49,
            -50,
            -40,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -41,
            -42,
            -43,
            84,
        ],
    ),
    "IN": (
        [
            44,
        ],
        [
            69,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "statement_list": (
        [
            0,
            42,
            43,
            73,
            75,
            85,
        ],
        [
            2,
            66,
            66,
            66,
            66,
            89,
        ],
    ),
    "statement": (
        [
            0,
            2,
            42,
            43,
            66,
            73,
            75,
            85,
            89,
        ],
        [
            3,
            25,
            67,
            67,
            25,
            67,
            67,
            67,
            25,
        ],
    ),
    "expression": (
        [
            0,
            2,
            10,
            11,
            20,
            21,
            24,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            40,
            41,
            42,
            43,
            66,
            69,
            72,
            73,
            75,
            84,
            85,
            89,
        ],
        [
            4,
            4,
            38,
            39,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            60,
            64,
            4,
            4,
            4,
            76,
            81,
            4,
            4,
            87,
            4,
            4,
        ],
    ),
    "if_statement": (
        [
            0,
            2,
            42,
            43,
            66,
            73,
            75,
            85,
            89,
        ],
        [
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
        ],
    ),
    "while_statement": (
        [
            0,
            2,
            42,
            43,
            66,
            73,
            75,
            85,
            89,
        ],
        [
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
        ],
    ),
    "for_statement": (
        [
            0,
            2,
            42,
            43,
            66,
            73,
            75,
            85,
            89,
        ],
        [
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
        ],
    ),
    "function_def": (
        [
            0,
            2,
            42,
            43,
            66,
            73,
            75,
            85,
            89,
        ],
        [
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
        ],
    ),
    "return_statement": (
        [
            0,
            2,
            42,
            43,
            66,
            73,
            75,
            85,
            89,
        ],
        [
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
        ],
    ),
    "arg_list": (
        [
            41,
        ],
        [
            61,
        ],
    ),
    "non_empty_arg_list": (
        [
            41,
        ],
        [
            62,
        ],
    ),
    "empty": (
        [
            41,
            70,
        ],
        [
            63,
            80,
        ],
    ),
    "block": (
        [
            42,
            43,
            73,
            75,
            85,
        ],
        [
            65,
            68,
            82,
            83,
            88,
        ],
    ),
    "range_statement": (
        [
            69,
        ],
        [
            75,
        ],
    ),
    "param_list": (
        [
            70,
        ],
        [
            78,
        ],
    ),
    "non_empty_param_list": (
        [
            70,
        ],
        [
            79,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    ("program -> statement_list", "program", 1, "p_program", "__init__.py", 18),
    (
        "statement_list -> statement_list statement",
        "statement_list",
        2,
        "p_statement_list",
        "__init__.py",
        23,
    ),
    (
        "statement_list -> statement",
        "statement_list",
        1,
        "p_statement_list",
        "__init__.py",
        24,
    ),
    ("statement -> expression", "statement", 1, "p_statement", "__init__.py", 29),
    ("statement -> if_statement", "statement", 1, "p_statement", "__init__.py", 30),
    ("statement -> while_statement", "statement", 1, "p_statement", "__init__.py", 31),
    ("statement -> for_statement", "statement", 1, "p_statement", "__init__.py", 32),
    ("statement -> function_def", "statement", 1, "p_statement", "__init__.py", 33),
    ("statement -> return_statement", "statement", 1, "p_statement", "__init__.py", 34),
    ("block -> statement_list END", "block", 2, "p_block", "__init__.py", 39),
    ("block -> statement", "block", 1, "p_block", "__init__.py", 40),
    (
        "if_statement -> IF expression block",
        "if_statement",
        3,
        "p_if_statement",
        "__init__.py",
        50,
    ),
    (
        "if_statement -> IF expression block ELSE block",
        "if_statement",
        5,
        "p_if_statement",
        "__init__.py",
        51,
    ),
    (
        "while_statement -> WHILE expression block",
        "while_statement",
        3,
        "p_while_statement",
        "__init__.py",
        56,
    ),
    (
        "for_statement -> FOR ID IN range_statement block",
        "for_statement",
        5,
        "p_for_statement",
        "__init__.py",
        61,
    ),
    (
        "range_statement -> expression RANGE expression",
        "range_statement",
        3,
        "p_range_statement",
        "__init__.py",
        66,
    ),
    (
        "function_def -> FUNCTION ID LPAREN param_list RPAREN block",
        "function_def",
        6,
        "p_function_def",
        "__init__.py",
        71,
    ),
    (
        "function_def -> FUNCTION ID LPAREN param_list RPAREN statement_list END",
        "function_def",
        7,
        "p_function_def",
        "__init__.py",
        72,
    ),
    (
        "return_statement -> RETURN expression",
        "return_statement",
        2,
        "p_return_statement",
        "__init__.py",
        78,
    ),
    (
        "param_list -> non_empty_param_list",
        "param_list",
        1,
        "p_param_list",
        "__init__.py",
        83,
    ),
    ("param_list -> empty", "param_list", 1, "p_param_list", "__init__.py", 84),
    (
        "non_empty_param_list -> non_empty_param_list COMMA ID",
        "non_empty_param_list",
        3,
        "p_non_empty_param_list",
        "__init__.py",
        89,
    ),
    (
        "non_empty_param_list -> ID",
        "non_empty_param_list",
        1,
        "p_non_empty_param_list",
        "__init__.py",
        90,
    ),
    ("arg_list -> non_empty_arg_list", "arg_list", 1, "p_arg_list", "__init__.py", 95),
    ("arg_list -> empty", "arg_list", 1, "p_arg_list", "__init__.py", 96),
    (
        "non_empty_arg_list -> non_empty_arg_list COMMA expression",
        "non_empty_arg_list",
        3,
        "p_non_empty_arg_list",
        "__init__.py",
        101,
    ),
    (
        "non_empty_arg_list -> expression",
        "non_empty_arg_list",
        1,
        "p_non_empty_arg_list",
        "__init__.py",
        102,
    ),
    (
        "expression -> expression PLUS expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        107,
    ),
    (
        "expression -> expression MINUS expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        108,
    ),
    (
        "expression -> expression TIMES expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        109,
    ),
    (
        "expression -> expression DIVIDE expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        110,
    ),
    (
        "expression -> expression AND expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        111,
    ),
    (
        "expression -> expression OR expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        112,
    ),
    (
        "expression -> expression EQ expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        113,
    ),
    (
        "expression -> expression NEQ expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        114,
    ),
    (
        "expression -> expression LT expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        115,
    ),
    (
        "expression -> expression GT expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        116,
    ),
    (
        "expression -> expression LE expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        117,
    ),
    (
        "expression -> expression GE expression",
        "expression",
        3,
        "p_expression_binary",
        "__init__.py",
        118,
    ),
    (
        "expression -> NOT expression",
        "expression",
        2,
        "p_expression_unary",
        "__init__.py",
        123,
    ),
    (
        "expression -> LPAREN expression RPAREN",
        "expression",
        3,
        "p_expression_group",
        "__init__.py",
        128,
    ),
    (
        "expression -> ID ASSIGN expression",
        "expression",
        3,
        "p_expression_assignment",
        "__init__.py",
        133,
    ),
    (
        "expression -> ID LPAREN arg_list RPAREN",
        "expression",
        4,
        "p_expression_function_call",
        "__init__.py",
        138,
    ),
    (
        "expression -> INTEGER",
        "expression",
        1,
        "p_expression_literal",
        "__init__.py",
        143,
    ),
    (
        "expression -> FLOAT",
        "expression",
        1,
        "p_expression_literal",
        "__init__.py",
        144,
    ),
    (
        "expression -> STRING",
        "expression",
        1,
        "p_expression_literal",
        "__init__.py",
        145,
    ),
    ("expression -> CHAR", "expression", 1, "p_expression_literal", "__init__.py", 146),
    ("expression -> BOOL", "expression", 1, "p_expression_literal", "__init__.py", 147),
    ("expression -> TRUE", "expression", 1, "p_expression_literal", "__init__.py", 148),
    (
        "expression -> FALSE",
        "expression",
        1,
        "p_expression_literal",
        "__init__.py",
        149,
    ),
    ("expression -> ID", "expression", 1, "p_expression_id", "__init__.py", 163),
    ("empty -> <empty>", "empty", 0, "p_empty", "__init__.py", 168),
]
